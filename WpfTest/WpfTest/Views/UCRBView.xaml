<UserControl x:Class="WpfTest.Views.UCRBView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
  <Grid>
    <Grid.Resources>

      <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Margin="0,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MaterialDesignRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
              <ControlTemplate.Resources>
                <Storyboard x:Key="Click">
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                  </DoubleAnimationUsingKeyFrames>
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                  </DoubleAnimationUsingKeyFrames>
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                  </DoubleAnimationUsingKeyFrames>
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                  </DoubleAnimationUsingKeyFrames>
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                  </DoubleAnimationUsingKeyFrames>
                </Storyboard>
              </ControlTemplate.Resources>
              <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Viewbox Width="18" Height="18"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Canvas Width="24" Height="24">
                    <Path 
                      x:Name="Graphic"
                      Data="M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" 
                      Fill="Black" />
                    <Ellipse 
                      x:Name="InteractionEllipse" 
                      Fill="Aqua" 
                      Width="0" Height="0" 
                      Canvas.Top="12" 
                      Canvas.Left="12" 
                      Opacity="0" 
                      RenderTransformOrigin="0.5,0.5" >
                      <Ellipse.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform/>
                          <SkewTransform/>
                          <RotateTransform/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </Ellipse.RenderTransform>
                    </Ellipse>
                  </Canvas>
                </Viewbox>
                <ContentPresenter x:Name="contentPresenter" 
                                  Grid.Column="1" Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="ButtonBase.Click">
                  <BeginStoryboard Storyboard="{StaticResource Click}"/>
                </EventTrigger>
                <Trigger Property="HasContent" Value="true">
                  <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                  <Setter Property="Padding" Value="4,2,0,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                  <Setter Property="Opacity" Value="0.26"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true"/>
                <Trigger Property="IsChecked" Value="true">
                  <Setter Property="Data" TargetName="Graphic" Value="M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7Z" />
                  <Setter Property="Fill" TargetName="Graphic" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                  <Setter Property="Data" TargetName="Graphic" Value="M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7Z" />
                  <Setter Property="Opacity" TargetName="Graphic" Value="0.56"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--<Style x:Key="MaterialDesignLightRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
      </Style>-->

      <!--<Style x:Key="MaterialDesignDarkRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
      </Style>-->

      <!--<Style x:Key="MaterialDesignAccentRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>
      </Style>-->



      <Style x:Key="MaterialDesignTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <!-- cludge the default context menu -->
        <Setter Property="ContextMenu">
          <Setter.Value>
            <ContextMenu>
              <MenuItem Header="_Cut" Command="Cut">
                <MenuItem.Icon>
                  <Viewbox Width="16" Height="16">
                    <Canvas Width="24" Height="24">
                      <Path Data="M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z" Fill="{DynamicResource MaterialDesignBody}" />
                    </Canvas>
                  </Viewbox>
                </MenuItem.Icon>
              </MenuItem>
              <MenuItem Header="_Copy" Command="Copy">
                <MenuItem.Icon>
                  <Viewbox Width="16" Height="16">
                    <Canvas Width="24" Height="24">
                      <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z" Fill="{DynamicResource MaterialDesignBody}" />
                    </Canvas>
                  </Viewbox>
                </MenuItem.Icon>
              </MenuItem>
              <MenuItem Header="_Paste" Command="Paste">
                <MenuItem.Icon>
                  <Viewbox Width="16" Height="16">
                    <Canvas Width="24" Height="24">
                      <Path Data="M19,20H5V4H7V7H17V4H19M12,2A1,1 0 0,1 13,3A1,1 0 0,1 12,4A1,1 0 0,1 11,3A1,1 0 0,1 12,2M19,2H14.82C14.4,0.84 13.3,0 12,0C10.7,0 9.6,0.84 9.18,2H5A2,2 0 0,0 3,4V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V4A2,2 0 0,0 19,2Z" Fill="{DynamicResource MaterialDesignBody}" />
                    </Canvas>
                  </Viewbox>
                </MenuItem.Icon>
              </MenuItem>
            </ContextMenu>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Grid>
                <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Padding="0 4 0 4">
                  <Grid Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                              />
                  </Grid>
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
              <Condition Property="IsSelectionActive" Value="false"/>
            </MultiTrigger.Conditions>
            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
          </MultiTrigger>
        </Style.Triggers>
      </Style>
<!--combo-->
      <Style x:Key="MaterialDesignComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


      <Style x:Key="MaterialDesignComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Grid>
                <Border x:Name="ToggleTemplateRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                  <Border x:Name="splitBorder"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    BorderBrush="Transparent"
                                    BorderThickness="0">
                    <Path x:Name="arrow"
                                              Width="8" Height="8"
                                              Margin="0"
                                              Stretch="Uniform"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              Data="M7,10L12,15L17,10H7Z"
                                              Fill="{TemplateBinding BorderBrush}" />
                  </Border>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                  </MultiDataTrigger.Conditions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                </MultiDataTrigger>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource PrimaryHueDarkBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="arrow" Property="Fill" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                </Trigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                  <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                </MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>




      <ControlTemplate x:Key="MaterialDesignFloatingHintComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              Background="{TemplateBinding Background}"
              SnapsToDevicePixels="True">
          <Grid x:Name="InnerRoot">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource MaterialDesignComboBoxToggleButton}"/>
            <Grid Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="{TemplateBinding Padding}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
              <Grid x:Name="InputRoot"
                          HorizontalAlignment="Left">
                <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False"/>
                <TextBox x:Name="PART_EditableTextBox"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Stretch"
                                 Style="{StaticResource MaterialDesignComboBoxEditableTextBox}"
                                 CaretBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"                                 
                                 Visibility="Collapsed" />
              </Grid>
            </Grid>

          </Grid>
        </Grid>
      </ControlTemplate>


      <Style x:Key="MaterialDesignComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0 6 0 6" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

        <Setter Property="Template" Value="{StaticResource MaterialDesignFloatingHintComboBoxTemplate}" />

      </Style>


    </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="2*"/>
      <RowDefinition Height="4*"/>
      <RowDefinition Height="7*"/>
      <RowDefinition Height="2*"/>
    </Grid.RowDefinitions>
    <RadioButton Grid.Row="0" 
                 Style="{StaticResource MaterialDesignRadioButton}" 
                 VerticalAlignment="Center" 
                 IsChecked="True"
      Background="#FF16C50E"
      BorderBrush="#FF000000"
                 
                 GroupName="RB1" Height="18" Margin="0,20,0,2">

      Radio1
    </RadioButton>
    <RadioButton
      Style="{StaticResource MaterialDesignRadioButton}"
      VerticalAlignment="Center"
      Background="#FF16C50E"
      BorderBrush="#FF000000"
      Foreground="Blue"
      Grid.Row="1"
      GroupName="RB1" Height="18" Margin="0,50,0,12"
      >
      Radio2
    </RadioButton>

    <!--materialDesign:HintAssist.Hint="Floating Hint"-->

    <TextBox Grid.Row="2"  VerticalAlignment="Center"
                 Style="{StaticResource MaterialDesignTextBox}" Text="My Text" Margin="80,84,70,28" Height="28">
      <TextBox.BorderBrush>
        <LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
          <GradientStop Color="#FFABADB3" Offset="0.05"/>
          <GradientStop Color="#FFE2E3EA" Offset="0.07"/>
          <GradientStop Color="#FF107EEC" Offset="1"/>
        </LinearGradientBrush>
      </TextBox.BorderBrush>
    </TextBox>

    <ComboBox Grid.Row="3" Style="{StaticResource MaterialDesignComboBox}" Width="50" SelectedIndex="0" FontSize="16" BorderBrush="#FF757575">
      <ComboBoxItem>All</ComboBoxItem>
      <ComboBoxItem>Android</ComboBoxItem>
      <ComboBoxItem>iOS</ComboBoxItem>
      <ComboBoxItem>Linux</ComboBoxItem>
      <ComboBoxItem>Windows</ComboBoxItem>
    </ComboBox>


  </Grid>
</UserControl>
